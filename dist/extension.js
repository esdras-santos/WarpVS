(()=>{"use strict";var e=[,e=>{e.exports=require("vscode")},(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SidebarProvider=void 0;const n=i(1),s=i(3);t.SidebarProvider=class{constructor(e){this._extensionUri=e}resolveWebviewView(e){this._view=e,e.webview.options={enableScripts:!0,localResourceRoots:[this._extensionUri]},e.webview.html=this._getHtmlForWebview(e.webview),e.webview.onDidReceiveMessage((async e=>{switch(e.type){case"transpile":{if(!e.value)return;const t=n.window.activeTextEditor?.document.languageId;"solidity"===t?n.commands.executeCommand("warpvs.transpile"):n.window.showErrorMessage("You are not in a .sol file");break}case"onInfo":if(!e.value)return;n.window.showInformationMessage(e.value);break;case"onError":if(!e.value)return;n.window.showErrorMessage(e.value)}}))}revive(e){this._view=e}_getHtmlForWebview(e){const t=e.asWebviewUri(n.Uri.joinPath(this._extensionUri,"media","reset.css")),i=e.asWebviewUri(n.Uri.joinPath(this._extensionUri,"out","compiled/sidebar.js")),o=e.asWebviewUri(n.Uri.joinPath(this._extensionUri,"out","compiled/sidebar.css")),r=e.asWebviewUri(n.Uri.joinPath(this._extensionUri,"media","vscode.css")),a=(0,s.getNonce)();return`<!DOCTYPE html>\n\t\t\t<html lang="en">\n\t\t\t<head>\n\t\t\t\t<meta charset="UTF-8">\n\t\t\t\t\x3c!--\n\t\t\t\t\tUse a content security policy to only allow loading images from https or from our extension directory,\n\t\t\t\t\tand only allow scripts that have a specific nonce.\n        --\x3e\n        <meta http-equiv="Content-Security-Policy" content="img-src https: data:; style-src 'unsafe-inline' ${e.cspSource}; script-src 'nonce-${a}';">\n\t\t\t\t<meta name="viewport" content="width=device-width, initial-scale=1.0">\n\t\t\t\t<link href="${t}" rel="stylesheet">\n\t\t\t\t<link href="${r}" rel="stylesheet">\n        <link href="${o}" rel="stylesheet">\n        <script nonce="${a}">\n          const tsvscode = acquireVsCodeApi();\n        <\/script>        \n\t\t\t</head>\n      <body>\n        \n\t\t\t\t<script nonce="${a}" src="${i}"><\/script>\n\t\t\t</body>\n\t\t\t</html>`}}},(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getNonce=void 0,t.getNonce=function(){let e="";const t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(let i=0;i<32;i++)e+=t.charAt(Math.floor(62*Math.random()));return e}}],t={};function i(n){var s=t[n];if(void 0!==s)return s.exports;var o=t[n]={exports:{}};return e[n](o,o.exports,i),o.exports}var n={};(()=>{var e=n;Object.defineProperty(e,"__esModule",{value:!0}),e.deactivate=e.activate=void 0;const t=i(1),s=i(2);e.activate=function(e){const i=new s.SidebarProvider(e.extensionUri);e.subscriptions.push(t.window.registerWebviewViewProvider("warpvs-sidebar",i)),e.subscriptions.push(t.commands.registerCommand("warpvs.voyager",(async()=>{await t.window.showInformationMessage("Open TX with Voyager","Open")}))),e.subscriptions.push(t.commands.registerCommand("warpvs.transpile",(async()=>{t.window.activeTextEditor?.document.uri.path;t.window.showInformationMessage("Solidty file succefully transpiled!")})))},e.deactivate=function(){}})(),module.exports=n})();
//# sourceMappingURL=extension.js.map